// src/react.tsx
import React, { useEffect } from "react";

// src/queue.ts
var initQueue = () => {
  if (window.va)
    return;
  window.va = function a(...params) {
    (window.vaq = window.vaq || []).push(params);
  };
};

// src/generic.ts
var isBrowser = typeof window !== "undefined";
var inject = ({
  beforeSend
} = {}) => {
  var _a;
  if (!isBrowser)
    return;
  initQueue();
  if (beforeSend) {
    (_a = window.va) == null ? void 0 : _a.call(window, "beforeSend", beforeSend);
  }
  if (document.head.querySelector('script[src="/va/script.js"]'))
    return;
  const script = document.createElement("script");
  script.src = "/va/script.js";
  script.defer = true;
  document.head.appendChild(script);
};

// src/react.tsx
function Analytics(props) {
  if (process.env.NODE_ENV !== "production") {
    return /* @__PURE__ */ React.createElement(NoopAnalytics, null);
  }
  return /* @__PURE__ */ React.createElement(EnabledAnalytics, {
    ...props
  });
}
function EnabledAnalytics({ beforeSend }) {
  useEffect(() => {
    inject({ beforeSend });
  }, [beforeSend]);
  return null;
}
function NoopAnalytics() {
  useEffect(() => {
    console.warn(
      "Vercel Analytics is set up, but detected a non-production environment.\n\nPlease note that no analytics events will be sent."
    );
  }, []);
  return null;
}
export {
  Analytics
};
//# sourceMappingURL=index.js.map